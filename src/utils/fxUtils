package utils;

import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.ListView;
import javafx.scene.control.TableView;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class fxUtils {
    public fxUtils() {
    }

    public static void alertDialogWarning(String message, String header) {
        Alert alert = new Alert(AlertType.WARNING);
        alert.setTitle("Info");
        alert.setHeaderText(header);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public static boolean showConfirmation(String title, String message) {
        Alert alert = new Alert(AlertType.CONFIRMATION);
        alert.initModality(Modality.APPLICATION_MODAL);
        alert.setTitle(title);
        alert.setHeaderText((String)null);
        alert.setContentText(message);
        Button okButton = (Button)alert.getDialogPane().lookupButton(ButtonType.OK);
        okButton.setText("OK");
        Button cancelButton = (Button)alert.getDialogPane().lookupButton(ButtonType.CANCEL);
        cancelButton.setText("Cancel");
        alert.showAndWait();
        return alert.getResult() == ButtonType.OK;
    }

    public static void throwAlert(String title, String message) {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.initModality(Modality.APPLICATION_MODAL);
        alert.setTitle(title);
        alert.setHeaderText((String)null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public static <T> void updateItem(ListView<T> listView, T item, String title, VBox content, Runnable callback) {
        Stage stage = new Stage();
        stage.initModality(Modality.APPLICATION_MODAL);
        stage.setTitle(title);
        Button okButton = new Button("OK");
        okButton.setDefaultButton(true);
        Button cancelButton = new Button("Cancel");
        cancelButton.setCancelButton(true);
        okButton.setOnAction((e) -> {
            callback.run();
            stage.close();
        });
        cancelButton.setOnAction((e) -> {
            stage.close();
        });
        HBox buttonBox = new HBox(okButton, cancelButton);
        buttonBox.setAlignment(Pos.CENTER_RIGHT);
        HBox.setHgrow(okButton, Priority.ALWAYS);
        HBox.setHgrow(cancelButton, Priority.ALWAYS);
        VBox vbox = new VBox(content, buttonBox);
        vbox.setSpacing(10.0);
        vbox.setPadding(new Insets(10.0));
        Scene scene = new Scene(vbox);
        stage.setScene(scene);
        stage.showAndWait();
        Platform.runLater(listView::requestFocus);
    }

    public static <T> void updateItem(TableView<T> listView, T item, String title, VBox content, Runnable callback) {
        Stage stage = new Stage();
        stage.initModality(Modality.APPLICATION_MODAL);
        stage.setTitle(title);
        Button okButton = new Button("OK");
        okButton.setDefaultButton(true);
        Button cancelButton = new Button("Cancel");
        cancelButton.setCancelButton(true);
        okButton.setOnAction((e) -> {
            callback.run();
            stage.close();
        });
        cancelButton.setOnAction((e) -> {
            stage.close();
        });
        HBox buttonBox = new HBox(okButton, cancelButton);
        buttonBox.setAlignment(Pos.CENTER_RIGHT);
        HBox.setHgrow(okButton, Priority.ALWAYS);
        HBox.setHgrow(cancelButton, Priority.ALWAYS);
        VBox vbox = new VBox(content, buttonBox);
        vbox.setSpacing(10.0);
        vbox.setPadding(new Insets(10.0));
        Scene scene = new Scene(vbox);
        stage.setScene(scene);
        stage.showAndWait();
        Platform.runLater(listView::requestFocus);
    }

}

